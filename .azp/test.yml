trigger: none

pr:
  - maint
  - master
  - feature/new-object-API

schedules:
- cron: "0 4 * * *"
  displayName: Daily midnight build
  # 4am UTC is midnight eastern time
  branches:
    include:
    - "*"

variables:
  image_root: glotzerlab/ci:2020.07

  # default build parameters, will override as needed with job matrix values
  enable_gpu: off
  enable_mpi: off
  enable_tbb: off
  build_validation: off
  build_jit: off
  omp_num_threads: '2'
  llvm_version: '6.0'
  build_testing: on
  always_use_managed_memory: off
  ctest_start: 1
  ctest_stride: 1
  mpiexec_timeout: 3000
  suite_name: $(Agent.JobName)

jobs:
- job: linux_cpu
  displayName: Linux
  timeoutInMinutes: 75

  strategy:
    matrix:
      # test the most recent platform and compiler combo here
      # other platform and compiler tests are in validate.yml
      clang10_py38_mpi_tbb:
        container_image: clang10_py38
        enable_mpi: on
        enable_tbb: on
        build_jit: on
        llvm_version: '10'

  pool:
    vmImage: 'ubuntu-latest'

  container:
    image: $(image_root)-$(container_image)
    options: -u 0

  steps:
  - template: templates/build.yml
  - template: templates/run_tests.yml

- job: linux_gpu
  displayName: Linux
  timeoutInMinutes: 75
  variables:
    enable_gpu: on

  strategy:
    matrix:
      # test the most recent platform and compiler combo here
      # other platform and compiler tests are in validate.yml
      cuda11_py37_mpi:
        container_image: cuda11_gcc7_py37

  pool:
    name: 'GPU'
    demands: short_jobs

  container:
      image: $(image_root)-$(container_image)
      options: -u 0 --gpus=all --cpus=4 --memory=16g -e CUDA_VISIBLE_DEVICES

  workspace:
    clean: all

  steps:
  - template: templates/build.yml
  - template: templates/run_tests.yml

- job: sphinx_doc
  displayName: Sphinx
  pool:
    vmImage: 'ubuntu-latest'

  container:
    image: $(image_root)-clang10_py38
    options: -u 0

  workspace:
    clean: all

  steps:
  - checkout: self
    submodules: true
  - script: sphinx-build -b html -d _build/doctrees -W -T --keep-going -n . _build/html
    displayName: (HTML)
    workingDirectory: sphinx-doc
  - script: sphinx-build -b latex -d _build/doctrees -W -T --keep-going -n . _build/latex
    displayName: (LaTeX)
    workingDirectory: sphinx-doc

- job: pydocstyle
  displayName: pydocstyle
  pool:
    vmImage: 'ubuntu-latest'

  container:
    image: $(image_root)-clang10_py38
    options: -u 0

  workspace:
    clean: all

  steps:
  - checkout: self
    submodules: true
  - script: >-
      pydocstyle -v
      hoomd/variant.py
      hoomd/device.py
      hoomd/simulation.py
    displayName: Run pydocstyle
